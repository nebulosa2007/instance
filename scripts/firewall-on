#!/bin/bash
#https://wiki.archlinux.org/title/Simple_stateful_firewall

#isRoot
[[ "$EUID" != 0 ]] && {
    echo "You need to run this script as root"
    exit 1
}

echo " * Flushing all rules"
iptables -F
iptables -X
iptables -t nat -F
iptables -t nat -X
iptables -t mangle -F
iptables -t mangle -X
iptables -t raw -F
iptables -t raw -X
iptables -t security -F
iptables -t security -X
iptables -P INPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -P OUTPUT ACCEPT

echo " * Setting default policies"
iptables -N TCP
iptables -N UDP
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT
iptables -P INPUT DROP

echo " * Allowing traffic that belongs to established connections, or new valid traffic"
iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

echo " * Allowing loopback devices"
iptables -A INPUT -i lo -j ACCEPT

echo " * Drop all traffic with an INVALID state match"
iptables -A INPUT -m conntrack --ctstate INVALID -j DROP

echo " * Allowing ping responses"
#iptables -A INPUT -p icmp --icmp-type 8 -m conntrack --ctstate NEW -j ACCEPT
#Recommendations from AI
iptables -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT
iptables -A INPUT -p icmp --icmp-type destination-unreachable -j ACCEPT
iptables -A INPUT -p icmp --icmp-type time-exceeded -j ACCEPT
iptables -A INPUT -p icmp --icmp-type parameter-problem -j ACCEPT
iptables -A INPUT -p icmp --icmp-type 8 -m conntrack --ctstate NEW -m limit --limit 1/second --limit-burst 5 -j ACCEPT

echo " * Setting TCP and UDP chains"
iptables -A INPUT -p udp -m conntrack --ctstate NEW -j UDP
iptables -A INPUT -p tcp --syn -m conntrack --ctstate NEW -j TCP

#echo " * Prevent SYN scan attack for TCP"
#iptables -I TCP -p tcp -m recent --update --rsource --seconds 60 --name TCP-PORTSCAN -j REJECT --reject-with tcp-reset
#iptables -A INPUT -p tcp -m recent --set --rsource --name TCP-PORTSCAN -j REJECT --reject-with tcp-reset

#echo " * Prevent SYN scan attack for UDP"
#iptables -I UDP -p udp -m recent --update --rsource --seconds 60 --name UDP-PORTSCAN -j REJECT --reject-with icmp-port-unreachable
#iptables -A INPUT -p udp -m recent --set --rsource --name UDP-PORTSCAN -j REJECT --reject-with icmp-port-unreachable

echo " * Rejecting all other traffic"
#iptables -A INPUT -j REJECT --reject-with icmp-proto-unreachable
#Recommendations from AI
iptables -A INPUT -p tcp -j REJECT --reject-with tcp-reset              # TCP → RST
iptables -A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable  # UDP → ICMP Port Unreachable
iptables -A INPUT -j REJECT --reject-with icmp-port-unreachable         # Other → Host Unreachable


for p in tcp udp; do
    echo -e "\nOpen ${p^^} ports by processes:\n"
    ops=$(ss -ln --$p | grep -Ev "(127\.|\[::\])" | grep -Po '(?<=:)(\d+)' | sort -nu | tr '\n' ' ')
    ss -lnp --$p | tail -n +2 | grep -Ev "(127\.|\[::\])" | sed 's/users:(("//g;s/:/ /;s/"/ /' | awk '{print $4, $5, $7}' | (
        echo "Address Port Process"
        sort -nk3,3 -nk2
    ) | column -t -R1
    read -rp $'\nPlease enter the ${p^^} ports (IPv4 only) for opening outside: ' -e -i "$ops" ops
    for op in $ops; do
        echo " * Allowing port $op"
        iptables -A "${p^^}" -p "$p" --dport "$op" -j ACCEPT
    done
    echo
done

echo " * Setting FORWARD policies"
iptables -N fw-interfaces
iptables -N fw-open
iptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -j fw-interfaces
iptables -A FORWARD -j fw-open
iptables -A FORWARD -j REJECT --reject-with icmp-host-unreachable
iptables -P FORWARD DROP

echo " * SAVING RULES for iptables v4"
iptables-save -f /etc/iptables/iptables.rules

echo " * STARTING IPTABLES v4"
systemctl enable --now iptables

ipv6gateway=$(ip -6 route | grep -Pom1 '^default via \K\S+')

if [ "$ipv6gateway" ]; then
    echo " * SAVING RULES for iptables v6"
    sed 's/^ *//' <<EOF >/etc/iptables/ip6tables.rules
        *raw
        :PREROUTING ACCEPT [0:0]
        :OUTPUT ACCEPT [22:2432]
        -A PREROUTING -m rpfilter -j ACCEPT
        -A PREROUTING -j DROP
        COMMIT
        *filter
        :INPUT DROP [0:0]
        :FORWARD DROP [0:0]
        :OUTPUT ACCEPT [0:0]
        :TCP - [0:0]
        :UDP - [0:0]
        :fw-interfaces - [0:0]
        :fw-open - [0:0]
        -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
        -A INPUT -i lo -j ACCEPT
        -A INPUT -m conntrack --ctstate INVALID -j DROP
        -A INPUT -p ipv6-icmp -m icmp6 --icmpv6-type 128 -m conntrack --ctstate NEW -j ACCEPT
        -A INPUT -s fe80::/10 -p ipv6-icmp -j ACCEPT
        -A INPUT -s fd42::/10 -p ipv6-icmp -j ACCEPT
        -A INPUT -p udp --sport 547 --dport 546 -j ACCEPT
        -A INPUT -p udp -m conntrack --ctstate NEW -j UDP
        -A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -m conntrack --ctstate NEW -j TCP
        -A INPUT -p udp -j REJECT --reject-with icmp6-port-unreachable
        -A INPUT -p tcp -j REJECT --reject-with tcp-reset
        -A INPUT -j REJECT --reject-with icmp6-port-unreachable
        -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
        -A FORWARD -j fw-interfaces
        -A FORWARD -j fw-open
        -A FORWARD -j REJECT
        COMMIT
EOF

    echo " * Setting ICMPv6 Neighbor Discovery Protocol"
    echo "   Default IPv6 gateway is:" "$ipv6gateway"
    sed -i "s|fd42::/10|$ipv6gateway/128|" /etc/iptables/ip6tables.rules

    echo " * STARTING IPTABLES v6"
    systemctl enable --now ip6tables
else
    echo " * No default IPv6 gateway found. Skip starting IPv6 iptables"
fi

echo "All set. Good luck!"
